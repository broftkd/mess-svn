
/*********************************************************************

    includes/x07.h

*********************************************************************/

/***************************************************************************
    CONSTANTS
***************************************************************************/
static const char *udk_ini[12] = {
	"tim?TIME$\15",
	"cldCLOAD\"",
	"locLOCATE ",
	"lstLIST ",
	"runRUN\15",
	"",
	"dat?DATE$\15",
	"csvCSAVE\"",
	"prtPRINT ",
	"slpSLEEP",
	"cntCONT\15",
	""
};

static const UINT16 udk_ptr[12] = {
	0x0000, 0x002a, 0x0054, 0x007e, 0x00a8, 0x00d2,
	0x0100, 0x012a, 0x0154, 0x017e, 0x01a8, 0x01d2
};

static const UINT8 t6834_cmd_len[0x47] = {
	0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0x04, 0x03,
	0x01, 0x02, 0x09, 0x01, 0x09, 0x01, 0x01, 0x02,
	0x03, 0x03, 0x03, 0x03, 0x05, 0x04, 0x82, 0x02,
	0x01, 0x01, 0x0a, 0x02, 0x01, 0x81, 0x81, 0x01,
	0x01, 0x01, 0x01, 0x01, 0x04, 0x01, 0x01, 0x03,
	0x02, 0x01, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01,
	0x01, 0x01, 0x01, 0x01, 0x01, 0x82, 0x01, 0x01,
	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
	0x01, 0x09, 0x01, 0x03, 0x03, 0x01, 0x01
};

static const UINT8 x07_keycodes[6*7][8] =
{
	/* normal */
	{0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38},
	{0x39, 0x30, 0x2d, 0x5e, 0x51, 0x57, 0x45, 0x52},
	{0x54, 0x59, 0x55, 0x49, 0x4f, 0x50, 0x40, 0x5b},
	{0x41, 0x53, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b},
	{0x4c, 0x3b, 0x3a, 0x5d, 0x5a, 0x58, 0x43, 0x56},
	{0x42, 0x4e, 0x4d, 0x2c, 0x2e, 0x2f, 0x3f, 0x20},
	{0x1d, 0x1c, 0x1e, 0x1f, 0x16, 0x0b, 0x0d, 0x12},

	/* shift */
	{0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28},
	{0x29, 0x7c, 0x3d, 0x7e, 0x71, 0x77, 0x65, 0x72},
	{0x74, 0x79, 0x75, 0x69, 0x6f, 0x70, 0x60, 0x7b},
	{0x61, 0x73, 0x64, 0x66, 0x67, 0x68, 0x6a, 0x6b},
	{0x6c, 0x2b, 0x2a, 0x7d, 0x7a, 0x78, 0x63, 0x76},
	{0x62, 0x6e, 0x6d, 0x3c, 0x3e, 0x3f, 0xa5, 0x20},
	{0x1d, 0x1c, 0x1e, 0x1f, 0x16, 0x0b, 0x0d, 0x12},

	/* ctrl */
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x11, 0x17, 0x05, 0x12},
	{0x14, 0x19, 0x15, 0x09, 0x0f, 0x10, 0x00, 0x00},
	{0x01, 0x13, 0x04, 0x06, 0x07, 0x08, 0x0a, 0x0b},
	{0x0c, 0x00, 0x00, 0x00, 0x1a, 0x18, 0x03, 0x16},
	{0x02, 0x0e, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x20},
	{0x1d, 0x1c, 0x1e, 0x1f, 0x16, 0x0b, 0x0d, 0x12},

	/* kana */
	{0xc7, 0xcc, 0xb1, 0xb3, 0xb4, 0xb5, 0xd4, 0xd5},
	{0xd6, 0xdc, 0xce, 0xcd, 0xc0,0xc3 , 0xb2, 0xbd},
	{0xb6, 0xdd, 0xc5, 0xc6, 0xd7, 0xbe, 0xde, 0xdf},
	{0xc1, 0xc4, 0xbc, 0xca, 0xb7, 0xb8, 0xcf, 0xc9},
	{0xd8, 0xda, 0xb9, 0xd1, 0xc2, 0xbb, 0xbf, 0xcb},
	{0xba, 0xd0, 0xd3, 0xc8, 0xd9, 0xd2, 0x00, 0x20},
	{0x1d, 0x1c, 0x1e, 0x1f, 0x16, 0x0b, 0x0d, 0x12},

	/*  shift + kana */
	{0x00, 0x00, 0xa7, 0xa9, 0xaa, 0xab, 0xac, 0xad},
	{0xae, 0xa6, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa2},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0xa3, 0xaf, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0xa4, 0xa1, 0xa5, 0x00, 0x20},
	{0x1d, 0x1c, 0x1e, 0x1f, 0x16, 0x0b, 0x0d, 0x12},

	 /*  graph */
	{0xe9, 0x90, 0x91, 0x92, 0x93, 0xec, 0xe0, 0xf2},
	{0xf1, 0x8a, 0xf0, 0xfc, 0x8b, 0xfb, 0x99, 0xf6},
	{0x97, 0x96, 0x94, 0xf9, 0x9e, 0xf7, 0xe7, 0x84},
	{0x88, 0x9f, 0xef, 0xfd, 0x9d, 0xfe, 0xe5, 0x9b},
	{0xf4, 0x82, 0x81, 0x85, 0xe1, 0x98, 0xe4, 0x95},
	{0xed, 0x89, 0xf5, 0x9c, 0x9a, 0x80, 0x00, 0x20},
	{0x1d, 0x1c, 0x1e, 0x1f, 0x16, 0x0b, 0x0d, 0x12}
};

static const UINT8 font[] =
{
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x70, 0x70, 0x20, 0x20, 0x00, 0x20, 0x00,
	0xd8, 0xd8, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x50, 0xf8, 0x50, 0x50, 0xf8, 0x50, 0x00,
	0x40, 0x70, 0x80, 0x60, 0x10, 0xe0, 0x20, 0x00,
	0xc0, 0xc8, 0x10, 0x20, 0x40, 0x98, 0x18, 0x00,
	0x40, 0xa0, 0xa0, 0x40, 0xa8, 0x90, 0x68, 0x00,
	0x60, 0x60, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x20, 0x40, 0x40, 0x40, 0x40, 0x40, 0x20, 0x00,
	0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x40, 0x00,
	0x00, 0x50, 0x70, 0xf8, 0x70, 0x50, 0x00, 0x00,
	0x00, 0x20, 0x20, 0xf8, 0x20, 0x20, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x60, 0x40,
	0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x00,
	0x00, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00,
	0x70, 0x88, 0x98, 0xa8, 0xc8, 0x88, 0x70, 0x00,
	0x20, 0x60, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00,
	0x70, 0x88, 0x08, 0x30, 0x40, 0x80, 0xf8, 0x00,
	0x70, 0x88, 0x08, 0x70, 0x08, 0x88, 0x70, 0x00,
	0x10, 0x30, 0x50, 0x90, 0xf8, 0x10, 0x10, 0x00,
	0xf8, 0x80, 0x80, 0xf0, 0x08, 0x88, 0x70, 0x00,
	0x30, 0x40, 0x80, 0xf0, 0x88, 0x88, 0x70, 0x00,
	0xf8, 0x08, 0x10, 0x20, 0x40, 0x40, 0x40, 0x00,
	0x70, 0x88, 0x88, 0x70, 0x88, 0x88, 0x70, 0x00,
	0x70, 0x88, 0x88, 0x78, 0x08, 0x10, 0x60, 0x00,
	0x00, 0x00, 0x60, 0x60, 0x00, 0x60, 0x60, 0x00,
	0x00, 0x00, 0x60, 0x60, 0x00, 0x20, 0x60, 0x40,
	0x10, 0x20, 0x40, 0x80, 0x40, 0x20, 0x10, 0x00,
	0x00, 0x00, 0xf8, 0x00, 0x00, 0xf8, 0x00, 0x00,
	0x40, 0x20, 0x10, 0x08, 0x10, 0x20, 0x40, 0x00,
	0x78, 0x88, 0x08, 0x30, 0x20, 0x00, 0x20, 0x00,
	0x70, 0x88, 0xb8, 0xa8, 0xb8, 0x80, 0x70, 0x00,
	0xf8, 0x88, 0x88, 0x88, 0xf8, 0x88, 0x88, 0x00,
	0xf0, 0x88, 0x88, 0xf0, 0x88, 0x88, 0xf0, 0x00,
	0xf8, 0x88, 0x80, 0x80, 0x80, 0x88, 0xf8, 0x00,
	0xf0, 0x88, 0x88, 0x88, 0x88, 0x88, 0xf0, 0x00,
	0xf8, 0x80, 0x80, 0xf0, 0x80, 0x80, 0xf8, 0x00,
	0xf8, 0x80, 0x80, 0xf0, 0x80, 0x80, 0x80, 0x00,
	0xf8, 0x88, 0x80, 0xb8, 0x88, 0x88, 0xf8, 0x00,
	0x88, 0x88, 0x88, 0xf8, 0x88, 0x88, 0x88, 0x00,
	0x70, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00,
	0x08, 0x08, 0x08, 0x08, 0x88, 0x88, 0xf8, 0x00,
	0x88, 0x90, 0xa0, 0xc0, 0xa0, 0x90, 0x88, 0x00,
	0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8, 0x00,
	0x88, 0xf8, 0xa8, 0xa8, 0x88, 0x88, 0x88, 0x00,
	0x88, 0xc8, 0xa8, 0x98, 0x88, 0x88, 0x88, 0x00,
	0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00,
	0xf8, 0x88, 0x88, 0xf8, 0x80, 0x80, 0x80, 0x00,
	0x70, 0x88, 0x88, 0x88, 0xa8, 0x90, 0x68, 0x00,
	0xf0, 0x88, 0x88, 0xf0, 0x90, 0x88, 0x88, 0x00,
	0x70, 0x88, 0x80, 0x70, 0x08, 0x88, 0x70, 0x00,
	0xf8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
	0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0xf8, 0x00,
	0x88, 0x88, 0x88, 0x88, 0x88, 0x50, 0x20, 0x00,
	0x88, 0x88, 0xa8, 0xa8, 0xa8, 0xa8, 0x50, 0x00,
	0x88, 0x88, 0x50, 0x20, 0x50, 0x88, 0x88, 0x00,
	0x88, 0x88, 0x88, 0x50, 0x20, 0x20, 0x20, 0x00,
	0xf0, 0x10, 0x20, 0x40, 0x80, 0x80, 0xf0, 0x00,
	0x70, 0x40, 0x40, 0x40, 0x40, 0x40, 0x70, 0x00,
	0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x00, 0x00,
	0x70, 0x10, 0x10, 0x10, 0x10, 0x10, 0x70, 0x00,
	0x20, 0x50, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8,
	0x60, 0x60, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xf8, 0x08, 0xf8, 0x88, 0xf8, 0x00,
	0x80, 0x80, 0xf8, 0x88, 0x88, 0x88, 0xf8, 0x00,
	0x00, 0x00, 0xf8, 0x80, 0x80, 0x80, 0xf8, 0x00,
	0x08, 0x08, 0x78, 0x88, 0x88, 0x88, 0x78, 0x00,
	0x00, 0x00, 0xf8, 0x88, 0xf8, 0x80, 0xf8, 0x00,
	0x30, 0x40, 0x40, 0xf0, 0x40, 0x40, 0x40, 0x00,
	0x00, 0x00, 0xf8, 0x88, 0x88, 0xf8, 0x08, 0x78,
	0x80, 0x80, 0xf0, 0x90, 0x90, 0x90, 0x90, 0x00,
	0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
	0x10, 0x00, 0x30, 0x10, 0x10, 0x10, 0x90, 0x60,
	0x80, 0x80, 0x90, 0xa0, 0xc0, 0xa0, 0x90, 0x00,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x30, 0x00,
	0x00, 0x00, 0xf8, 0xa8, 0xa8, 0x88, 0x88, 0x00,
	0x00, 0x00, 0xf0, 0x90, 0x90, 0x90, 0x90, 0x00,
	0x00, 0x00, 0xf8, 0x88, 0x88, 0x88, 0xf8, 0x00,
	0x00, 0x00, 0xf0, 0x88, 0x88, 0x88, 0xf0, 0x80,
	0x00, 0x00, 0x78, 0x88, 0x88, 0x88, 0x78, 0x08,
	0x00, 0x00, 0xb8, 0x48, 0x40, 0x40, 0xe0, 0x00,
	0x00, 0x00, 0x70, 0x80, 0x70, 0x08, 0x70, 0x00,
	0x00, 0x40, 0xf0, 0x40, 0x40, 0x50, 0x20, 0x00,
	0x00, 0x00, 0x90, 0x90, 0x90, 0xb0, 0x50, 0x00,
	0x00, 0x00, 0x88, 0x88, 0x88, 0x50, 0x20, 0x00,
	0x00, 0x00, 0x88, 0x88, 0xa8, 0xf8, 0x50, 0x00,
	0x00, 0x00, 0x90, 0x90, 0x60, 0x90, 0x90, 0x00,
	0x00, 0x00, 0x90, 0x90, 0x90, 0x70, 0x20, 0xc0,
	0x00, 0x00, 0xf0, 0x10, 0x60, 0x80, 0xf0, 0x00,
	0x30, 0x40, 0x40, 0xc0, 0x40, 0x40, 0x30, 0x00,
	0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x00,
	0x60, 0x10, 0x10, 0x18, 0x10, 0x10, 0x60, 0x00,
	0x50, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xf8, 0xd8, 0xd8, 0xa8, 0xd8, 0xd8, 0xf8, 0x00,
	0x00, 0x30, 0x78, 0xfc, 0x78, 0x30, 0x00, 0x00,
	0x00, 0x30, 0x78, 0xfc, 0x78, 0x30, 0x00, 0x00,
	0x00, 0x30, 0x78, 0xfc, 0x78, 0x30, 0x00, 0x00,
	0x00, 0x00, 0x10, 0x38, 0x7c, 0x38, 0x10, 0x00
};


/***************************************************************************
    FUNCTION PROTOTYPES
***************************************************************************/

static PALETTE_INIT( x07 );
static VIDEO_UPDATE( x07 );
static READ8_HANDLER( x07_IO_r );
static WRITE8_HANDLER( x07_IO_w );
static TIMER_CALLBACK( irq_clear );
static TIMER_CALLBACK( keyboard_clear );
static TIMER_DEVICE_CALLBACK( keyboard_poll );
static MACHINE_START( x07 );
static MACHINE_RESET( x07 );

